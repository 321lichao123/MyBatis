<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//com.atguigu.mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.atguigu.mybatis.dao.DepartmentMapper">

    <!--引用缓存：namespace指定和那个名称空间下的缓存一样-->
    <cache-ref namespace="com.atguigu.mybatis.dao.EmployeeMapper"/>

    <select id="getDeptById" resultType="com.atguigu.mybatis.bean.Department">
        select id, dept_name departmentName from tbl_dept where id = #{id}
    </select>

    <!--嵌套结果集的方式,使用collection标签定义关联集合类型的属性封装规则-->
    <resultMap id="myDept" type="com.atguigu.mybatis.bean.Department">
        <id column="did" property="id" />
        <result column="dept_name" property="departmentName" />
        <!--
            collection:定义关联集合类型的属性的封装规则
                ofType:指定集合里元素的类型【必填】
        -->
        <collection property="emps" ofType="com.atguigu.mybatis.bean.Employee">
            <id column="eid" property="id" />
            <result column="last_name" property="lastName" />
            <result column="email" property="email" />
            <result column="gender" property="gender" />
        </collection>
    </resultMap>
    <select id="getDeptByIdPlus" resultMap="myDept">
        SELECT d.id did, d.dept_name dept_name,
               e.id eid, e.last_name last_name, e.email email, e.gender gender
        FROM tbl_dept d
                 LEFT JOIN tbl_employee e
                           ON d.id = e.d_id
        WHERE d.id = 2
    </select>

    <!--使用collection进行分部查询-->
    <resultMap id="myDeptStep" type="com.atguigu.mybatis.bean.Department">
        <id column="id" property="id" />
        <result column="dept_name" property="departmentName" />
        <collection property="emps"
                    select="com.atguigu.mybatis.dao.EmployeeMapperPlus.getEmpsByDeptId"
                    column="{deptId=id}"
                    fetchType="eager"></collection>
    </resultMap>
    <select id="getDeptByIdStep" resultMap="myDeptStep">
        select * from tbl_dept where id = #{id}
    </select>
    <!--
        扩展:多列的值传递过去
            将多列的值封装到map传递:
                column = "{key1=value1, key2=value2,...}"
            fetchType:表示是否开启懒加载
                lazy:表示开启懒加载
                eager:表示立即
    -->
</mapper>